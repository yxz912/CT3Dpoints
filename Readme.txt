数据输入有以下几种具体的实现方法:
1.将不同切片的图像沿通道维拼接成一个大的多通道图像,作为模型输入。这要求模型可以处理多通道输入。
2.将不同切片转成批量维,输入到模型的batch维度上。这要求调整模型第一层来接受更大batch size。
3.将不同切片平铺在空间维度上拼接成大图像,作为模型输入。这需要确保模型的空域感受野足够大。
4.分别输入不同切片,但共享网络权重,在网络输出端融合不同切片的特征。
5.建立3D卷积网络,直接以切片组成的3D Volume作为输入。
注：需要注意拼接后通道数过大,可以考虑在输入端使用1x1卷积进行降维。沿通道方向拼接切片可以提供更多上下文信息,但需要注意模型设计和参数调整的对应。

3D卷积神经网络：
如果要从3D切片中检测出多类别3D点的位置：
1.利用3D卷积提取特征,输入为3D切片。
2.输出层nchannels = num_classes x 3 ,表示每个类别的xyz坐标。
3.坐标预测用回归分支,loss加上MSE loss。
4.classification分支保留,表征每个类别的存在置信度。
5.loss综合分类、置信度和坐标mse loss。
6.后处理取topk置信度点,解码获得分类和3D坐标。
7.可以加点关系约束,如距离限制等。
8.也可以建立金标准点数据库,直接回归点的id。
具体一点的实现思路:
3D UNet等网络提取特征
输出nclasses x 3通道表示坐标
nclasses分类分支
Loss为分类+置信度+坐标MSE
解码获得分类+3D坐标
坐标可加后处理

